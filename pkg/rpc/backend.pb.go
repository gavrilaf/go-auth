// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend.proto

/*
Package backend is a generated protocol buffer package.

It is generated from these files:
	backend.proto

It has these top-level messages:
	Empty
	Device
	CreateUserRequest
	CreateUserResponse
	AddDeviceRequest
	LoginRequest
*/
package backend

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Device struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Locale string `protobuf:"bytes,3,opt,name=locale" json:"locale,omitempty"`
	Lang   string `protobuf:"bytes,4,opt,name=lang" json:"lang,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Device) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

func (m *Device) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

type CreateUserRequest struct {
	Username     string  `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	PasswordHash string  `protobuf:"bytes,2,opt,name=passwordHash" json:"passwordHash,omitempty"`
	Device       *Device `protobuf:"bytes,3,opt,name=device" json:"device,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateUserRequest) GetPasswordHash() string {
	if m != nil {
		return m.PasswordHash
	}
	return ""
}

func (m *CreateUserRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateUserResponse struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type AddDeviceRequest struct {
	UserId string  `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	Device *Device `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
}

func (m *AddDeviceRequest) Reset()                    { *m = AddDeviceRequest{} }
func (m *AddDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*AddDeviceRequest) ProtoMessage()               {}
func (*AddDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddDeviceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type LoginRequest struct {
	UserId      string                     `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	Device      *Device                    `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
	LoginTime   *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=loginTime" json:"loginTime,omitempty"`
	LoginIP     string                     `protobuf:"bytes,4,opt,name=loginIP" json:"loginIP,omitempty"`
	LoginRegion string                     `protobuf:"bytes,5,opt,name=loginRegion" json:"loginRegion,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LoginRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *LoginRequest) GetLoginTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.LoginTime
	}
	return nil
}

func (m *LoginRequest) GetLoginIP() string {
	if m != nil {
		return m.LoginIP
	}
	return ""
}

func (m *LoginRequest) GetLoginRegion() string {
	if m != nil {
		return m.LoginRegion
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "backend.Empty")
	proto.RegisterType((*Device)(nil), "backend.Device")
	proto.RegisterType((*CreateUserRequest)(nil), "backend.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "backend.CreateUserResponse")
	proto.RegisterType((*AddDeviceRequest)(nil), "backend.AddDeviceRequest")
	proto.RegisterType((*LoginRequest)(nil), "backend.LoginRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Spawn service

type SpawnClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	AddDevice(ctx context.Context, in *AddDeviceRequest, opts ...grpc.CallOption) (*Empty, error)
	RegisterLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Empty, error)
}

type spawnClient struct {
	cc *grpc.ClientConn
}

func NewSpawnClient(cc *grpc.ClientConn) SpawnClient {
	return &spawnClient{cc}
}

func (c *spawnClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := grpc.Invoke(ctx, "/backend.Spawn/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spawnClient) AddDevice(ctx context.Context, in *AddDeviceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/backend.Spawn/AddDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spawnClient) RegisterLogin(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/backend.Spawn/RegisterLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Spawn service

type SpawnServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	AddDevice(context.Context, *AddDeviceRequest) (*Empty, error)
	RegisterLogin(context.Context, *LoginRequest) (*Empty, error)
}

func RegisterSpawnServer(s *grpc.Server, srv SpawnServer) {
	s.RegisterService(&_Spawn_serviceDesc, srv)
}

func _Spawn_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpawnServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Spawn/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpawnServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spawn_AddDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpawnServer).AddDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Spawn/AddDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpawnServer).AddDevice(ctx, req.(*AddDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spawn_RegisterLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpawnServer).RegisterLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Spawn/RegisterLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpawnServer).RegisterLogin(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Spawn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend.Spawn",
	HandlerType: (*SpawnServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _Spawn_CreateUser_Handler,
		},
		{
			MethodName: "AddDevice",
			Handler:    _Spawn_AddDevice_Handler,
		},
		{
			MethodName: "RegisterLogin",
			Handler:    _Spawn_RegisterLogin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}

func init() { proto.RegisterFile("backend.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4d, 0x4f, 0xab, 0x50,
	0x10, 0x7d, 0xf0, 0x5a, 0xfa, 0x3a, 0xfd, 0x78, 0x3a, 0x89, 0x06, 0x71, 0x61, 0xc3, 0x46, 0x17,
	0x86, 0x26, 0x75, 0xe3, 0xd6, 0xa8, 0xd1, 0x26, 0x2e, 0x0c, 0xad, 0x89, 0xdb, 0xdb, 0x72, 0x45,
	0x22, 0x70, 0x91, 0x4b, 0x6d, 0x4c, 0xfc, 0x79, 0xfa, 0xbf, 0xcc, 0xfd, 0x80, 0xa2, 0x55, 0x57,
	0xee, 0x38, 0x33, 0xe7, 0xce, 0x9c, 0x39, 0x07, 0xe8, 0xcd, 0xc8, 0xfc, 0x81, 0xa6, 0x81, 0x97,
	0xe5, 0xac, 0x60, 0xd8, 0xd2, 0xd0, 0xd9, 0x0b, 0x19, 0x0b, 0x63, 0x3a, 0x94, 0xe5, 0xd9, 0xe2,
	0x6e, 0x58, 0x44, 0x09, 0xe5, 0x05, 0x49, 0x32, 0xc5, 0x74, 0x5b, 0xd0, 0x3c, 0x4f, 0xb2, 0xe2,
	0xd9, 0xbd, 0x05, 0xeb, 0x8c, 0x3e, 0x45, 0x73, 0x8a, 0x7d, 0x30, 0xa3, 0xc0, 0x36, 0x06, 0xc6,
	0x41, 0xdb, 0x37, 0xa3, 0x00, 0x11, 0x1a, 0x29, 0x49, 0xa8, 0x6d, 0xca, 0x8a, 0xfc, 0xc6, 0x6d,
	0xb0, 0x62, 0x36, 0x27, 0x31, 0xb5, 0xff, 0xca, 0xaa, 0x46, 0x82, 0x1b, 0x93, 0x34, 0xb4, 0x1b,
	0x8a, 0x2b, 0xbe, 0xdd, 0x17, 0xd8, 0x3c, 0xcd, 0x29, 0x29, 0xe8, 0x0d, 0xa7, 0xb9, 0x4f, 0x1f,
	0x17, 0x94, 0x17, 0xe8, 0xc0, 0xbf, 0x05, 0xa7, 0xb9, 0x1c, 0xac, 0x56, 0x55, 0x18, 0x5d, 0xe8,
	0x66, 0x84, 0xf3, 0x25, 0xcb, 0x83, 0x4b, 0xc2, 0xef, 0xf5, 0xe2, 0x0f, 0x35, 0xdc, 0x07, 0x2b,
	0x90, 0x72, 0xa5, 0x80, 0xce, 0xe8, 0xbf, 0x57, 0x3a, 0xa0, 0xae, 0xf0, 0x75, 0xdb, 0x3d, 0x04,
	0xac, 0x6f, 0xe7, 0x19, 0x4b, 0xb9, 0xd4, 0x2f, 0xd6, 0x8d, 0xcb, 0x3b, 0x35, 0x72, 0x27, 0xb0,
	0x71, 0x12, 0x04, 0x7a, 0x84, 0x96, 0xfa, 0x0d, 0xb7, 0x26, 0xc1, 0xfc, 0x59, 0xc2, 0x9b, 0x01,
	0xdd, 0x2b, 0x16, 0x46, 0xe9, 0x6f, 0x4d, 0xc4, 0x63, 0x68, 0xc7, 0x62, 0xe0, 0x34, 0x4a, 0x4a,
	0x03, 0x1c, 0x4f, 0x45, 0xed, 0x95, 0x51, 0x7b, 0xd3, 0x32, 0x6a, 0x7f, 0x45, 0x46, 0x1b, 0x5a,
	0x12, 0x8c, 0xaf, 0x75, 0x46, 0x25, 0xc4, 0x01, 0x74, 0x62, 0x25, 0x32, 0x8c, 0x58, 0x6a, 0x37,
	0x65, 0xb7, 0x5e, 0x1a, 0xbd, 0x1a, 0xd0, 0x9c, 0x64, 0x64, 0x99, 0xe2, 0x05, 0xc0, 0xca, 0x54,
	0x74, 0x2a, 0x99, 0x6b, 0x39, 0x3b, 0xbb, 0x5f, 0xf6, 0x54, 0x0a, 0xee, 0x1f, 0x71, 0x48, 0xe5,
	0x37, 0xee, 0x54, 0xdc, 0xcf, 0x19, 0x38, 0xfd, 0xaa, 0xa5, 0xfe, 0x56, 0xf1, 0xb2, 0x27, 0x64,
	0xf1, 0x82, 0xe6, 0xd2, 0x5b, 0xdc, 0xaa, 0x28, 0x75, 0xaf, 0xd7, 0x5f, 0xce, 0x2c, 0xe9, 0xd0,
	0xd1, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84, 0x96, 0x82, 0x61, 0x34, 0x03, 0x00, 0x00,
}
